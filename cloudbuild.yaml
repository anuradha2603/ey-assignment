steps:
  # Authenticate with GCP (built-in service account)
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Authenticate with GCP'
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "Authenticating with GCP"
        gcloud config set project $PROJECT_ID
        gcloud config set compute/region $_REGION

  # Build Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Docker Image'
    args:
      [
        "build",
        "-t",
        "gcr.io/$PROJECT_ID/nginx:latest",
        "."
      ]

  # Push Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Docker Image'
    args:
      [
        "push",
        "gcr.io/$PROJECT_ID/nginx:latest"
      ]

  # Deploy to GKE cluster
  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'Deploy to GKE Cluster'
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "Deploying to GKE cluster"
        gcloud container clusters get-credentials my-gke-cluster --region $_REGION
        kubectl apply -f kubernetes/namespace.yaml
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/service.yaml

  # Verify Deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'Verify Deployment'
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "Verifying deployment"
        kubectl get pods -n test-namespace
        kubectl describe service nginx-service -n test-namespace

substitutions:
  _REGION: "us-central1"  # Define the region substitution

options:
  env:
    - 'PROJECT_ID=bold-gadget-444515-n6'
